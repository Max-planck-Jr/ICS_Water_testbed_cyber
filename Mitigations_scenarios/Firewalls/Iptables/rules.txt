# Clear existing rules
iptables -F
iptables -X

# Set default policies
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

# Allow established connections
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow ICMP (ping) ONLY between authorized IPs
iptables -A INPUT -p icmp -s 172.18.0.9 -d 172.18.0.11 -j ACCEPT
iptables -A INPUT -p icmp -s 172.18.0.11 -d 172.18.0.9 -j ACCEPT
iptables -A OUTPUT -p icmp -s 172.18.0.9 -d 172.18.0.11 -j ACCEPT
iptables -A OUTPUT -p icmp -s 172.18.0.11 -d 172.18.0.9 -j ACCEPT

# Block all other ICMP
iptables -A INPUT -p icmp -j DROP
iptables -A OUTPUT -p icmp -j DROP

# Allow all other traffic (including scanning) between authorized IPs
iptables -A INPUT -s 172.18.0.9 -d 172.18.0.11 -j ACCEPT
iptables -A INPUT -s 172.18.0.11 -d 172.18.0.9 -j ACCEPT
iptables -A OUTPUT -s 172.18.0.9 -d 172.18.0.11 -j ACCEPT
iptables -A OUTPUT -s 172.18.0.11 -d 172.18.0.9 -j ACCEPT

# Block scanning attempts from unauthorized IPs
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
iptables -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
iptables -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

# Drop all other traffic
iptables -A INPUT -j DROP
iptables -A OUTPUT -j DROP
iptables -A FORWARD -j DROP


###################################################  always do apt update before installing some tools ###################################################

sudo docker ps -aqf "name=name=kibana" 
sudo docker exec -u 0 -it kibana bash 
apt update && apt upgrade -y

apt update && apt install iproute2 -y 
apt update && apt install -y iputils-ping 
apt-get install wget && apt-get install gnupg
apt-get install coreutils (Command to intall tee)
sudo docker run -d -h elk --name elk --net supervisory --privileged --ip 172.18.2.8 -p 9200:9200 -it -m 1GB docker.elastic.co/elasticsearch/elasticsearch:8.17.3


wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
apt-get install apt-transport-https

echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee /etc/apt/sources.list.d/elastic-8.x.list

apt-get update && apt-get install elasticsearch

apt-get install nano

systemctl enable elasticsearch && systemctl start elasticsearch

apt install systemd (Command to install systemd into ubuntu docker container)

sudo docker run -d --name es01 -h es01 --net supervisory --ip 172.18.2.8 --privileged -p 9200:9200  -m 1GB docker.elastic.co/elasticsearch/elasticsearch:8.17.3

sudo docker run -d --name kibana -h kibana --net supervisory --ip 172.18.2.7 --privileged -p 5601:5601 docker.elastic.co/kibana/kibana:8.17.3

sudo docker run -d --name logstash -h logstash --net supervisory --ip 172.18.2.6 --privileged docker.elastic.co/logstash/logstash:8.17.3


wget https://raw.githubusercontent.com/grafana/loki/v3.4.1/cmd/loki/loki-local-config.yaml -O loki-config.yaml
wget https://raw.githubusercontent.com/grafana/loki/v3.4.1/clients/cmd/promtail/promtail-docker-config.yaml -O promtail-config.yaml


sudo docker run --name loki -h loki --net supervisory --ip 172.18.2.8 --privileged -d -v $(pwd):/mnt/config -p 3100:3100 grafana/loki:3.4.1 -config.file=/mnt/config/loki-config.yaml
sudo docker run --name promtail -h promtail --net supervisory --ip 172.18.2.7 --privileged -d -v $(pwd):/mnt/config -v /var/log:/var/log --link loki grafana/promtail:3.4.1 -config.file=/mnt/config/promtail-config.yaml
sudo docker run --name grafana -h grafana --net supervisory --ip 172.18.2.6 --privileged -d -p 3000:3000 --link loki grafana/grafana


docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

Get to /etc/docker/daemon.json and add this code : 

{ 
    "debug": true,
    "loki-driver": "loki",
    "log-opts": {
        "loki-url": "http://address_of_loki_server:3100/loki/api/v1/push",
        "loki-batch-size": "400"
    }
}

Restart the docker and the containers after this 

Since we juste create the loki, grafana and promtail containers, we have to create back all the other containers for it to capture the logs